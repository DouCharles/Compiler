Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 PackageStmt: PACKAGE ID

    8 Type: INT
    9     | FLOAT
   10     | STRING
   11     | BOOL

   12 Expression: Assignment_expression

   13 Assignment_expression: Lor_expression
   14                      | UnaryExpr assignment_op Assignment_expression

   15 Lor_expression: Land_expression
   16               | Lor_expression LOR Land_expression

   17 Land_expression: Cmp_expression
   18                | Land_expression LAND Cmp_expression

   19 Cmp_expression: Add_expression
   20               | Cmp_expression cmp_op Add_expression

   21 Add_expression: Mul_expression
   22               | Add_expression add_op Mul_expression

   23 Mul_expression: Cast_expression
   24               | Mul_expression mul_op Cast_expression

   25 Cast_expression: UnaryExpr
   26                | ConversionExpr

   27 UnaryExpr: PrimaryExpr
   28          | unary_op Cast_expression

   29 assignment_op: '='
   30              | ADD_ASSIGN
   31              | SUB_ASSIGN
   32              | MUL_ASSIGN
   33              | QUO_ASSIGN
   34              | REM_ASSIGN

   35 cmp_op: EQU
   36       | NEQ
   37       | '<'
   38       | LEQ
   39       | '>'
   40       | GEQ

   41 add_op: '+'
   42       | '-'

   43 mul_op: '*'
   44       | '/'
   45       | '%'

   46 unary_op: '+'
   47         | '-'
   48         | '!'

   49 PrimaryExpr: Operand

   50 Operand: Literal
   51        | ID
   52        | '(' Expression ')'
   53        | TRUE
   54        | FALSE

   55 Literal: INT_LIT
   56        | FLOAT_LIT
   57        | '"' Str '"'

   58 Str: Str STRING_LIT
   59    | STRING_LIT

   60 ConversionExpr: Type '(' Expression ')'

   61 Statement: DeclarationStmt NEWLINE
   62          | FunctionCall NEWLINE
   63          | SimpleStmt NEWLINE
   64          | Block
   65          | IfStmt
   66          | ForStmt
   67          | SwitchStmt
   68          | CaseStmt
   69          | PrintStmt NEWLINE
   70          | ReturnStmt NEWLINE
   71          | NEWLINE

   72 FunctionCall: CallID '(' ')'
   73             | CallID '(' Parameters_call ')'

   74 CallID: ID

   75 Parameters_call: Operand
   76                | Parameters_call ',' Operand

   77 SimpleStmt: Expression
   78           | IncDecStmt

   79 DeclarationStmt: VAR VarID VarType
   80                | VAR VarID VarType '=' Expression
   81                | VAR VarID VarType '=' FunctionCall

   82 VarID: ID

   83 VarType: Type

   84 IncDecStmt: Expression INC
   85           | Expression DEC

   86 Block: LParantheses StatementList RParantheses

   87 LParantheses: '{'

   88 RParantheses: '}'

   89 StatementList: Statement
   90              | StatementList Statement

   91 IfStmt: IF Condition Block ElseStmt

   92 ElseStmt: %empty
   93         | ELSE IfStmt
   94         | ELSE Block

   95 Condition: Expression

   96 ForStmt: FOR Condition Block
   97        | FOR ForClause Block

   98 ForClause: InitStmt ';' Condition ';' PostStmt

   99 InitStmt: SimpleStmt

  100 PostStmt: SimpleStmt

  101 SwitchStmt: SwitchPrototype Block

  102 SwitchPrototype: SWITCH Expression

  103 CaseStmt: Case ':' Block
  104         | Default ':' Block

  105 Case: CASE INT_LIT

  106 Default: DEFAULT

  107 FunctionDeclStmt: FuncPrototype FuncBlock

  108 FuncPrototype: FuncTitle FuncParameters Type LParantheses
  109              | FuncTitle FuncParameters LParantheses

  110 FuncParameters: '(' ParameterList ')'
  111               | '(' ')'

  112 FuncTitle: FUNC ID

  113 ParameterList: ParID Type
  114              | ParameterList ',' ParID Type

  115 ParID: ID

  116 FuncBlock: StatementList RParantheses

  117 ReturnStmt: RETURN
  118           | RETURN Expression

  119 PrintStmt: PRINT '(' Expression ')'
  120          | PRINTLN '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 48
'"' (34) 57
'%' (37) 45
'(' (40) 52 60 72 73 110 111 119 120
')' (41) 52 60 72 73 110 111 119 120
'*' (42) 43
'+' (43) 41 46
',' (44) 76 114
'-' (45) 42 47
'/' (47) 44
':' (58) 103 104
';' (59) 98
'<' (60) 37
'=' (61) 29 80 81
'>' (62) 39
'{' (123) 87
'}' (125) 88
error (256)
VAR (258) 79 80 81
NEWLINE (259) 4 6 61 62 63 69 70 71
INT (260) 8
FLOAT (261) 9
BOOL (262) 11
STRING (263) 10
INC (264) 84
DEC (265) 85
GEQ (266) 40
LOR (267) 16
LAND (268) 18
LEQ (269) 38
EQU (270) 35
NEQ (271) 36
ADD_ASSIGN (272) 30
SUB_ASSIGN (273) 31
MUL_ASSIGN (274) 32
QUO_ASSIGN (275) 33
REM_ASSIGN (276) 34
IF (277) 91
ELSE (278) 93 94
FOR (279) 96 97
SWITCH (280) 102
CASE (281) 105
PRINT (282) 119
PRINTLN (283) 120
TRUE (284) 53
FALSE (285) 54
PACKAGE (286) 7
FUNC (287) 112
ID (288) 7 51 74 82 112 115
RETURN (289) 117 118
DEFAULT (290) 106
INT_LIT (291) 55 105
STRING_LIT (292) 58 59
FLOAT_LIT (293) 56


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
Program (57)
    on left: 1, on right: 0
GlobalStatementList (58)
    on left: 2 3, on right: 1 2
GlobalStatement (59)
    on left: 4 5 6, on right: 2 3
PackageStmt (60)
    on left: 7, on right: 4
Type (61)
    on left: 8 9 10 11, on right: 60 83 108 113 114
Expression (62)
    on left: 12, on right: 52 60 77 80 84 85 95 102 118 119 120
Assignment_expression (63)
    on left: 13 14, on right: 12 14
Lor_expression (64)
    on left: 15 16, on right: 13 16
Land_expression (65)
    on left: 17 18, on right: 15 16 18
Cmp_expression (66)
    on left: 19 20, on right: 17 18 20
Add_expression (67)
    on left: 21 22, on right: 19 20 22
Mul_expression (68)
    on left: 23 24, on right: 21 22 24
Cast_expression (69)
    on left: 25 26, on right: 23 24 28
UnaryExpr (70)
    on left: 27 28, on right: 14 25
assignment_op (71)
    on left: 29 30 31 32 33 34, on right: 14
cmp_op (72)
    on left: 35 36 37 38 39 40, on right: 20
add_op (73)
    on left: 41 42, on right: 22
mul_op (74)
    on left: 43 44 45, on right: 24
unary_op (75)
    on left: 46 47 48, on right: 28
PrimaryExpr (76)
    on left: 49, on right: 27
Operand (77)
    on left: 50 51 52 53 54, on right: 49 75 76
Literal (78)
    on left: 55 56 57, on right: 50
Str (79)
    on left: 58 59, on right: 57 58
ConversionExpr (80)
    on left: 60, on right: 26
Statement (81)
    on left: 61 62 63 64 65 66 67 68 69 70 71, on right: 89 90
FunctionCall (82)
    on left: 72 73, on right: 62 81
CallID (83)
    on left: 74, on right: 72 73
Parameters_call (84)
    on left: 75 76, on right: 73 76
SimpleStmt (85)
    on left: 77 78, on right: 63 99 100
DeclarationStmt (86)
    on left: 79 80 81, on right: 61
VarID (87)
    on left: 82, on right: 79 80 81
VarType (88)
    on left: 83, on right: 79 80 81
IncDecStmt (89)
    on left: 84 85, on right: 78
Block (90)
    on left: 86, on right: 64 91 94 96 97 101 103 104
LParantheses (91)
    on left: 87, on right: 86 108 109
RParantheses (92)
    on left: 88, on right: 86 116
StatementList (93)
    on left: 89 90, on right: 86 90 116
IfStmt (94)
    on left: 91, on right: 65 93
ElseStmt (95)
    on left: 92 93 94, on right: 91
Condition (96)
    on left: 95, on right: 91 96 98
ForStmt (97)
    on left: 96 97, on right: 66
ForClause (98)
    on left: 98, on right: 97
InitStmt (99)
    on left: 99, on right: 98
PostStmt (100)
    on left: 100, on right: 98
SwitchStmt (101)
    on left: 101, on right: 67
SwitchPrototype (102)
    on left: 102, on right: 101
CaseStmt (103)
    on left: 103 104, on right: 68
Case (104)
    on left: 105, on right: 103
Default (105)
    on left: 106, on right: 104
FunctionDeclStmt (106)
    on left: 107, on right: 5
FuncPrototype (107)
    on left: 108 109, on right: 107
FuncParameters (108)
    on left: 110 111, on right: 108 109
FuncTitle (109)
    on left: 112, on right: 108 109
ParameterList (110)
    on left: 113 114, on right: 110 114
ParID (111)
    on left: 115, on right: 113 114
FuncBlock (112)
    on left: 116, on right: 107
ReturnStmt (113)
    on left: 117 118, on right: 70
PrintStmt (114)
    on left: 119 120, on right: 69


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncPrototype        go to state 9
    FuncTitle            go to state 10


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

    7 PackageStmt: PACKAGE . ID

    ID  shift, and go to state 11


State 3

  112 FuncTitle: FUNC . ID

    ID  shift, and go to state 12


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 13


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 14
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncPrototype     go to state 9
    FuncTitle         go to state 10


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 15


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

  107 FunctionDeclStmt: FuncPrototype . FuncBlock

    VAR        shift, and go to state 16
    NEWLINE    shift, and go to state 17
    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    IF         shift, and go to state 22
    FOR        shift, and go to state 23
    SWITCH     shift, and go to state 24
    CASE       shift, and go to state 25
    PRINT      shift, and go to state 26
    PRINTLN    shift, and go to state 27
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 30
    RETURN     shift, and go to state 31
    DEFAULT    shift, and go to state 32
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39
    '{'        shift, and go to state 40

    Type                   go to state 41
    Expression             go to state 42
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    Statement              go to state 56
    FunctionCall           go to state 57
    CallID                 go to state 58
    SimpleStmt             go to state 59
    DeclarationStmt        go to state 60
    IncDecStmt             go to state 61
    Block                  go to state 62
    LParantheses           go to state 63
    StatementList          go to state 64
    IfStmt                 go to state 65
    ForStmt                go to state 66
    SwitchStmt             go to state 67
    SwitchPrototype        go to state 68
    CaseStmt               go to state 69
    Case                   go to state 70
    Default                go to state 71
    FuncBlock              go to state 72
    ReturnStmt             go to state 73
    PrintStmt              go to state 74


State 10

  108 FuncPrototype: FuncTitle . FuncParameters Type LParantheses
  109              | FuncTitle . FuncParameters LParantheses

    '('  shift, and go to state 75

    FuncParameters  go to state 76


State 11

    7 PackageStmt: PACKAGE ID .

    $default  reduce using rule 7 (PackageStmt)


State 12

  112 FuncTitle: FUNC ID .

    $default  reduce using rule 112 (FuncTitle)


State 13

    0 $accept: Program $end .

    $default  accept


State 14

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 15

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 16

   79 DeclarationStmt: VAR . VarID VarType
   80                | VAR . VarID VarType '=' Expression
   81                | VAR . VarID VarType '=' FunctionCall

    ID  shift, and go to state 77

    VarID  go to state 78


State 17

   71 Statement: NEWLINE .

    $default  reduce using rule 71 (Statement)


State 18

    8 Type: INT .

    $default  reduce using rule 8 (Type)


State 19

    9 Type: FLOAT .

    $default  reduce using rule 9 (Type)


State 20

   11 Type: BOOL .

    $default  reduce using rule 11 (Type)


State 21

   10 Type: STRING .

    $default  reduce using rule 10 (Type)


State 22

   91 IfStmt: IF . Condition Block ElseStmt

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 80
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    Condition              go to state 81


State 23

   96 ForStmt: FOR . Condition Block
   97        | FOR . ForClause Block

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 82
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    SimpleStmt             go to state 83
    IncDecStmt             go to state 61
    Condition              go to state 84
    ForClause              go to state 85
    InitStmt               go to state 86


State 24

  102 SwitchPrototype: SWITCH . Expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 87
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 25

  105 Case: CASE . INT_LIT

    INT_LIT  shift, and go to state 88


State 26

  119 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 89


State 27

  120 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 90


State 28

   53 Operand: TRUE .

    $default  reduce using rule 53 (Operand)


State 29

   54 Operand: FALSE .

    $default  reduce using rule 54 (Operand)


State 30

   51 Operand: ID .
   74 CallID: ID .

    '('       reduce using rule 74 (CallID)
    $default  reduce using rule 51 (Operand)


State 31

  117 ReturnStmt: RETURN .
  118           | RETURN . Expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    $default  reduce using rule 117 (ReturnStmt)

    Type                   go to state 41
    Expression             go to state 91
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 32

  106 Default: DEFAULT .

    $default  reduce using rule 106 (Default)


State 33

   55 Literal: INT_LIT .

    $default  reduce using rule 55 (Literal)


State 34

   56 Literal: FLOAT_LIT .

    $default  reduce using rule 56 (Literal)


State 35

   46 unary_op: '+' .

    $default  reduce using rule 46 (unary_op)


State 36

   47 unary_op: '-' .

    $default  reduce using rule 47 (unary_op)


State 37

   48 unary_op: '!' .

    $default  reduce using rule 48 (unary_op)


State 38

   52 Operand: '(' . Expression ')'

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 92
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 39

   57 Literal: '"' . Str '"'

    STRING_LIT  shift, and go to state 93

    Str  go to state 94


State 40

   87 LParantheses: '{' .

    $default  reduce using rule 87 (LParantheses)


State 41

   60 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 95


State 42

   77 SimpleStmt: Expression .
   84 IncDecStmt: Expression . INC
   85           | Expression . DEC

    INC  shift, and go to state 96
    DEC  shift, and go to state 97

    $default  reduce using rule 77 (SimpleStmt)


State 43

   12 Expression: Assignment_expression .

    $default  reduce using rule 12 (Expression)


State 44

   13 Assignment_expression: Lor_expression .
   16 Lor_expression: Lor_expression . LOR Land_expression

    LOR  shift, and go to state 98

    $default  reduce using rule 13 (Assignment_expression)


State 45

   15 Lor_expression: Land_expression .
   18 Land_expression: Land_expression . LAND Cmp_expression

    LAND  shift, and go to state 99

    $default  reduce using rule 15 (Lor_expression)


State 46

   17 Land_expression: Cmp_expression .
   20 Cmp_expression: Cmp_expression . cmp_op Add_expression

    GEQ  shift, and go to state 100
    LEQ  shift, and go to state 101
    EQU  shift, and go to state 102
    NEQ  shift, and go to state 103
    '<'  shift, and go to state 104
    '>'  shift, and go to state 105

    $default  reduce using rule 17 (Land_expression)

    cmp_op  go to state 106


State 47

   19 Cmp_expression: Add_expression .
   22 Add_expression: Add_expression . add_op Mul_expression

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 19 (Cmp_expression)

    add_op  go to state 109


State 48

   21 Add_expression: Mul_expression .
   24 Mul_expression: Mul_expression . mul_op Cast_expression

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 21 (Add_expression)

    mul_op  go to state 113


State 49

   23 Mul_expression: Cast_expression .

    $default  reduce using rule 23 (Mul_expression)


State 50

   14 Assignment_expression: UnaryExpr . assignment_op Assignment_expression
   25 Cast_expression: UnaryExpr .

    ADD_ASSIGN  shift, and go to state 114
    SUB_ASSIGN  shift, and go to state 115
    MUL_ASSIGN  shift, and go to state 116
    QUO_ASSIGN  shift, and go to state 117
    REM_ASSIGN  shift, and go to state 118
    '='         shift, and go to state 119

    $default  reduce using rule 25 (Cast_expression)

    assignment_op  go to state 120


State 51

   28 UnaryExpr: unary_op . Cast_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type             go to state 41
    Cast_expression  go to state 121
    UnaryExpr        go to state 122
    unary_op         go to state 51
    PrimaryExpr      go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55


State 52

   27 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 27 (UnaryExpr)


State 53

   49 PrimaryExpr: Operand .

    $default  reduce using rule 49 (PrimaryExpr)


State 54

   50 Operand: Literal .

    $default  reduce using rule 50 (Operand)


State 55

   26 Cast_expression: ConversionExpr .

    $default  reduce using rule 26 (Cast_expression)


State 56

   89 StatementList: Statement .

    $default  reduce using rule 89 (StatementList)


State 57

   62 Statement: FunctionCall . NEWLINE

    NEWLINE  shift, and go to state 123


State 58

   72 FunctionCall: CallID . '(' ')'
   73             | CallID . '(' Parameters_call ')'

    '('  shift, and go to state 124


State 59

   63 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 125


State 60

   61 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 126


State 61

   78 SimpleStmt: IncDecStmt .

    $default  reduce using rule 78 (SimpleStmt)


State 62

   64 Statement: Block .

    $default  reduce using rule 64 (Statement)


State 63

   86 Block: LParantheses . StatementList RParantheses

    VAR        shift, and go to state 16
    NEWLINE    shift, and go to state 17
    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    IF         shift, and go to state 22
    FOR        shift, and go to state 23
    SWITCH     shift, and go to state 24
    CASE       shift, and go to state 25
    PRINT      shift, and go to state 26
    PRINTLN    shift, and go to state 27
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 30
    RETURN     shift, and go to state 31
    DEFAULT    shift, and go to state 32
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39
    '{'        shift, and go to state 40

    Type                   go to state 41
    Expression             go to state 42
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    Statement              go to state 56
    FunctionCall           go to state 57
    CallID                 go to state 58
    SimpleStmt             go to state 59
    DeclarationStmt        go to state 60
    IncDecStmt             go to state 61
    Block                  go to state 62
    LParantheses           go to state 63
    StatementList          go to state 127
    IfStmt                 go to state 65
    ForStmt                go to state 66
    SwitchStmt             go to state 67
    SwitchPrototype        go to state 68
    CaseStmt               go to state 69
    Case                   go to state 70
    Default                go to state 71
    ReturnStmt             go to state 73
    PrintStmt              go to state 74


State 64

   90 StatementList: StatementList . Statement
  116 FuncBlock: StatementList . RParantheses

    VAR        shift, and go to state 16
    NEWLINE    shift, and go to state 17
    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    IF         shift, and go to state 22
    FOR        shift, and go to state 23
    SWITCH     shift, and go to state 24
    CASE       shift, and go to state 25
    PRINT      shift, and go to state 26
    PRINTLN    shift, and go to state 27
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 30
    RETURN     shift, and go to state 31
    DEFAULT    shift, and go to state 32
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39
    '{'        shift, and go to state 40
    '}'        shift, and go to state 128

    Type                   go to state 41
    Expression             go to state 42
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    Statement              go to state 129
    FunctionCall           go to state 57
    CallID                 go to state 58
    SimpleStmt             go to state 59
    DeclarationStmt        go to state 60
    IncDecStmt             go to state 61
    Block                  go to state 62
    LParantheses           go to state 63
    RParantheses           go to state 130
    IfStmt                 go to state 65
    ForStmt                go to state 66
    SwitchStmt             go to state 67
    SwitchPrototype        go to state 68
    CaseStmt               go to state 69
    Case                   go to state 70
    Default                go to state 71
    ReturnStmt             go to state 73
    PrintStmt              go to state 74


State 65

   65 Statement: IfStmt .

    $default  reduce using rule 65 (Statement)


State 66

   66 Statement: ForStmt .

    $default  reduce using rule 66 (Statement)


State 67

   67 Statement: SwitchStmt .

    $default  reduce using rule 67 (Statement)


State 68

  101 SwitchStmt: SwitchPrototype . Block

    '{'  shift, and go to state 40

    Block         go to state 131
    LParantheses  go to state 63


State 69

   68 Statement: CaseStmt .

    $default  reduce using rule 68 (Statement)


State 70

  103 CaseStmt: Case . ':' Block

    ':'  shift, and go to state 132


State 71

  104 CaseStmt: Default . ':' Block

    ':'  shift, and go to state 133


State 72

  107 FunctionDeclStmt: FuncPrototype FuncBlock .

    $default  reduce using rule 107 (FunctionDeclStmt)


State 73

   70 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 134


State 74

   69 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 135


State 75

  110 FuncParameters: '(' . ParameterList ')'
  111               | '(' . ')'

    ID   shift, and go to state 136
    ')'  shift, and go to state 137

    ParameterList  go to state 138
    ParID          go to state 139


State 76

  108 FuncPrototype: FuncTitle FuncParameters . Type LParantheses
  109              | FuncTitle FuncParameters . LParantheses

    INT     shift, and go to state 18
    FLOAT   shift, and go to state 19
    BOOL    shift, and go to state 20
    STRING  shift, and go to state 21
    '{'     shift, and go to state 40

    Type          go to state 140
    LParantheses  go to state 141


State 77

   82 VarID: ID .

    $default  reduce using rule 82 (VarID)


State 78

   79 DeclarationStmt: VAR VarID . VarType
   80                | VAR VarID . VarType '=' Expression
   81                | VAR VarID . VarType '=' FunctionCall

    INT     shift, and go to state 18
    FLOAT   shift, and go to state 19
    BOOL    shift, and go to state 20
    STRING  shift, and go to state 21

    Type     go to state 142
    VarType  go to state 143


State 79

   51 Operand: ID .

    $default  reduce using rule 51 (Operand)


State 80

   95 Condition: Expression .

    $default  reduce using rule 95 (Condition)


State 81

   91 IfStmt: IF Condition . Block ElseStmt

    '{'  shift, and go to state 40

    Block         go to state 144
    LParantheses  go to state 63


State 82

   77 SimpleStmt: Expression .
   84 IncDecStmt: Expression . INC
   85           | Expression . DEC
   95 Condition: Expression .

    INC  shift, and go to state 96
    DEC  shift, and go to state 97

    '{'       reduce using rule 95 (Condition)
    $default  reduce using rule 77 (SimpleStmt)


State 83

   99 InitStmt: SimpleStmt .

    $default  reduce using rule 99 (InitStmt)


State 84

   96 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 40

    Block         go to state 145
    LParantheses  go to state 63


State 85

   97 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 40

    Block         go to state 146
    LParantheses  go to state 63


State 86

   98 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 147


State 87

  102 SwitchPrototype: SWITCH Expression .

    $default  reduce using rule 102 (SwitchPrototype)


State 88

  105 Case: CASE INT_LIT .

    $default  reduce using rule 105 (Case)


State 89

  119 PrintStmt: PRINT '(' . Expression ')'

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 148
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 90

  120 PrintStmt: PRINTLN '(' . Expression ')'

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 149
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 91

  118 ReturnStmt: RETURN Expression .

    $default  reduce using rule 118 (ReturnStmt)


State 92

   52 Operand: '(' Expression . ')'

    ')'  shift, and go to state 150


State 93

   59 Str: STRING_LIT .

    $default  reduce using rule 59 (Str)


State 94

   57 Literal: '"' Str . '"'
   58 Str: Str . STRING_LIT

    STRING_LIT  shift, and go to state 151
    '"'         shift, and go to state 152


State 95

   60 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 153
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 96

   84 IncDecStmt: Expression INC .

    $default  reduce using rule 84 (IncDecStmt)


State 97

   85 IncDecStmt: Expression DEC .

    $default  reduce using rule 85 (IncDecStmt)


State 98

   16 Lor_expression: Lor_expression LOR . Land_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type             go to state 41
    Land_expression  go to state 154
    Cmp_expression   go to state 46
    Add_expression   go to state 47
    Mul_expression   go to state 48
    Cast_expression  go to state 49
    UnaryExpr        go to state 122
    unary_op         go to state 51
    PrimaryExpr      go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55


State 99

   18 Land_expression: Land_expression LAND . Cmp_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type             go to state 41
    Cmp_expression   go to state 155
    Add_expression   go to state 47
    Mul_expression   go to state 48
    Cast_expression  go to state 49
    UnaryExpr        go to state 122
    unary_op         go to state 51
    PrimaryExpr      go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55


State 100

   40 cmp_op: GEQ .

    $default  reduce using rule 40 (cmp_op)


State 101

   38 cmp_op: LEQ .

    $default  reduce using rule 38 (cmp_op)


State 102

   35 cmp_op: EQU .

    $default  reduce using rule 35 (cmp_op)


State 103

   36 cmp_op: NEQ .

    $default  reduce using rule 36 (cmp_op)


State 104

   37 cmp_op: '<' .

    $default  reduce using rule 37 (cmp_op)


State 105

   39 cmp_op: '>' .

    $default  reduce using rule 39 (cmp_op)


State 106

   20 Cmp_expression: Cmp_expression cmp_op . Add_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type             go to state 41
    Add_expression   go to state 156
    Mul_expression   go to state 48
    Cast_expression  go to state 49
    UnaryExpr        go to state 122
    unary_op         go to state 51
    PrimaryExpr      go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55


State 107

   41 add_op: '+' .

    $default  reduce using rule 41 (add_op)


State 108

   42 add_op: '-' .

    $default  reduce using rule 42 (add_op)


State 109

   22 Add_expression: Add_expression add_op . Mul_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type             go to state 41
    Mul_expression   go to state 157
    Cast_expression  go to state 49
    UnaryExpr        go to state 122
    unary_op         go to state 51
    PrimaryExpr      go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55


State 110

   43 mul_op: '*' .

    $default  reduce using rule 43 (mul_op)


State 111

   44 mul_op: '/' .

    $default  reduce using rule 44 (mul_op)


State 112

   45 mul_op: '%' .

    $default  reduce using rule 45 (mul_op)


State 113

   24 Mul_expression: Mul_expression mul_op . Cast_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type             go to state 41
    Cast_expression  go to state 158
    UnaryExpr        go to state 122
    unary_op         go to state 51
    PrimaryExpr      go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55


State 114

   30 assignment_op: ADD_ASSIGN .

    $default  reduce using rule 30 (assignment_op)


State 115

   31 assignment_op: SUB_ASSIGN .

    $default  reduce using rule 31 (assignment_op)


State 116

   32 assignment_op: MUL_ASSIGN .

    $default  reduce using rule 32 (assignment_op)


State 117

   33 assignment_op: QUO_ASSIGN .

    $default  reduce using rule 33 (assignment_op)


State 118

   34 assignment_op: REM_ASSIGN .

    $default  reduce using rule 34 (assignment_op)


State 119

   29 assignment_op: '=' .

    $default  reduce using rule 29 (assignment_op)


State 120

   14 Assignment_expression: UnaryExpr assignment_op . Assignment_expression

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Assignment_expression  go to state 159
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55


State 121

   28 UnaryExpr: unary_op Cast_expression .

    $default  reduce using rule 28 (UnaryExpr)


State 122

   25 Cast_expression: UnaryExpr .

    $default  reduce using rule 25 (Cast_expression)


State 123

   62 Statement: FunctionCall NEWLINE .

    $default  reduce using rule 62 (Statement)


State 124

   72 FunctionCall: CallID '(' . ')'
   73             | CallID '(' . Parameters_call ')'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '('        shift, and go to state 38
    ')'        shift, and go to state 160
    '"'        shift, and go to state 39

    Operand          go to state 161
    Literal          go to state 54
    Parameters_call  go to state 162


State 125

   63 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 63 (Statement)


State 126

   61 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 61 (Statement)


State 127

   86 Block: LParantheses StatementList . RParantheses
   90 StatementList: StatementList . Statement

    VAR        shift, and go to state 16
    NEWLINE    shift, and go to state 17
    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    IF         shift, and go to state 22
    FOR        shift, and go to state 23
    SWITCH     shift, and go to state 24
    CASE       shift, and go to state 25
    PRINT      shift, and go to state 26
    PRINTLN    shift, and go to state 27
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 30
    RETURN     shift, and go to state 31
    DEFAULT    shift, and go to state 32
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39
    '{'        shift, and go to state 40
    '}'        shift, and go to state 128

    Type                   go to state 41
    Expression             go to state 42
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    Statement              go to state 129
    FunctionCall           go to state 57
    CallID                 go to state 58
    SimpleStmt             go to state 59
    DeclarationStmt        go to state 60
    IncDecStmt             go to state 61
    Block                  go to state 62
    LParantheses           go to state 63
    RParantheses           go to state 163
    IfStmt                 go to state 65
    ForStmt                go to state 66
    SwitchStmt             go to state 67
    SwitchPrototype        go to state 68
    CaseStmt               go to state 69
    Case                   go to state 70
    Default                go to state 71
    ReturnStmt             go to state 73
    PrintStmt              go to state 74


State 128

   88 RParantheses: '}' .

    $default  reduce using rule 88 (RParantheses)


State 129

   90 StatementList: StatementList Statement .

    $default  reduce using rule 90 (StatementList)


State 130

  116 FuncBlock: StatementList RParantheses .

    $default  reduce using rule 116 (FuncBlock)


State 131

  101 SwitchStmt: SwitchPrototype Block .

    $default  reduce using rule 101 (SwitchStmt)


State 132

  103 CaseStmt: Case ':' . Block

    '{'  shift, and go to state 40

    Block         go to state 164
    LParantheses  go to state 63


State 133

  104 CaseStmt: Default ':' . Block

    '{'  shift, and go to state 40

    Block         go to state 165
    LParantheses  go to state 63


State 134

   70 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 70 (Statement)


State 135

   69 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 69 (Statement)


State 136

  115 ParID: ID .

    $default  reduce using rule 115 (ParID)


State 137

  111 FuncParameters: '(' ')' .

    $default  reduce using rule 111 (FuncParameters)


State 138

  110 FuncParameters: '(' ParameterList . ')'
  114 ParameterList: ParameterList . ',' ParID Type

    ')'  shift, and go to state 166
    ','  shift, and go to state 167


State 139

  113 ParameterList: ParID . Type

    INT     shift, and go to state 18
    FLOAT   shift, and go to state 19
    BOOL    shift, and go to state 20
    STRING  shift, and go to state 21

    Type  go to state 168


State 140

  108 FuncPrototype: FuncTitle FuncParameters Type . LParantheses

    '{'  shift, and go to state 40

    LParantheses  go to state 169


State 141

  109 FuncPrototype: FuncTitle FuncParameters LParantheses .

    $default  reduce using rule 109 (FuncPrototype)


State 142

   83 VarType: Type .

    $default  reduce using rule 83 (VarType)


State 143

   79 DeclarationStmt: VAR VarID VarType .
   80                | VAR VarID VarType . '=' Expression
   81                | VAR VarID VarType . '=' FunctionCall

    '='  shift, and go to state 170

    $default  reduce using rule 79 (DeclarationStmt)


State 144

   91 IfStmt: IF Condition Block . ElseStmt

    ELSE  shift, and go to state 171

    $default  reduce using rule 92 (ElseStmt)

    ElseStmt  go to state 172


State 145

   96 ForStmt: FOR Condition Block .

    $default  reduce using rule 96 (ForStmt)


State 146

   97 ForStmt: FOR ForClause Block .

    $default  reduce using rule 97 (ForStmt)


State 147

   98 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 80
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    Condition              go to state 173


State 148

  119 PrintStmt: PRINT '(' Expression . ')'

    ')'  shift, and go to state 174


State 149

  120 PrintStmt: PRINTLN '(' Expression . ')'

    ')'  shift, and go to state 175


State 150

   52 Operand: '(' Expression ')' .

    $default  reduce using rule 52 (Operand)


State 151

   58 Str: Str STRING_LIT .

    $default  reduce using rule 58 (Str)


State 152

   57 Literal: '"' Str '"' .

    $default  reduce using rule 57 (Literal)


State 153

   60 ConversionExpr: Type '(' Expression . ')'

    ')'  shift, and go to state 176


State 154

   16 Lor_expression: Lor_expression LOR Land_expression .
   18 Land_expression: Land_expression . LAND Cmp_expression

    LAND  shift, and go to state 99

    $default  reduce using rule 16 (Lor_expression)


State 155

   18 Land_expression: Land_expression LAND Cmp_expression .
   20 Cmp_expression: Cmp_expression . cmp_op Add_expression

    GEQ  shift, and go to state 100
    LEQ  shift, and go to state 101
    EQU  shift, and go to state 102
    NEQ  shift, and go to state 103
    '<'  shift, and go to state 104
    '>'  shift, and go to state 105

    $default  reduce using rule 18 (Land_expression)

    cmp_op  go to state 106


State 156

   20 Cmp_expression: Cmp_expression cmp_op Add_expression .
   22 Add_expression: Add_expression . add_op Mul_expression

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 20 (Cmp_expression)

    add_op  go to state 109


State 157

   22 Add_expression: Add_expression add_op Mul_expression .
   24 Mul_expression: Mul_expression . mul_op Cast_expression

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 22 (Add_expression)

    mul_op  go to state 113


State 158

   24 Mul_expression: Mul_expression mul_op Cast_expression .

    $default  reduce using rule 24 (Mul_expression)


State 159

   14 Assignment_expression: UnaryExpr assignment_op Assignment_expression .

    $default  reduce using rule 14 (Assignment_expression)


State 160

   72 FunctionCall: CallID '(' ')' .

    $default  reduce using rule 72 (FunctionCall)


State 161

   75 Parameters_call: Operand .

    $default  reduce using rule 75 (Parameters_call)


State 162

   73 FunctionCall: CallID '(' Parameters_call . ')'
   76 Parameters_call: Parameters_call . ',' Operand

    ')'  shift, and go to state 177
    ','  shift, and go to state 178


State 163

   86 Block: LParantheses StatementList RParantheses .

    $default  reduce using rule 86 (Block)


State 164

  103 CaseStmt: Case ':' Block .

    $default  reduce using rule 103 (CaseStmt)


State 165

  104 CaseStmt: Default ':' Block .

    $default  reduce using rule 104 (CaseStmt)


State 166

  110 FuncParameters: '(' ParameterList ')' .

    $default  reduce using rule 110 (FuncParameters)


State 167

  114 ParameterList: ParameterList ',' . ParID Type

    ID  shift, and go to state 136

    ParID  go to state 179


State 168

  113 ParameterList: ParID Type .

    $default  reduce using rule 113 (ParameterList)


State 169

  108 FuncPrototype: FuncTitle FuncParameters Type LParantheses .

    $default  reduce using rule 108 (FuncPrototype)


State 170

   80 DeclarationStmt: VAR VarID VarType '=' . Expression
   81                | VAR VarID VarType '=' . FunctionCall

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 30
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 180
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    FunctionCall           go to state 181
    CallID                 go to state 58


State 171

   93 ElseStmt: ELSE . IfStmt
   94         | ELSE . Block

    IF   shift, and go to state 22
    '{'  shift, and go to state 40

    Block         go to state 182
    LParantheses  go to state 63
    IfStmt        go to state 183


State 172

   91 IfStmt: IF Condition Block ElseStmt .

    $default  reduce using rule 91 (IfStmt)


State 173

   98 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 184


State 174

  119 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 119 (PrintStmt)


State 175

  120 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 120 (PrintStmt)


State 176

   60 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 60 (ConversionExpr)


State 177

   73 FunctionCall: CallID '(' Parameters_call ')' .

    $default  reduce using rule 73 (FunctionCall)


State 178

   76 Parameters_call: Parameters_call ',' . Operand

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Operand  go to state 185
    Literal  go to state 54


State 179

  114 ParameterList: ParameterList ',' ParID . Type

    INT     shift, and go to state 18
    FLOAT   shift, and go to state 19
    BOOL    shift, and go to state 20
    STRING  shift, and go to state 21

    Type  go to state 186


State 180

   80 DeclarationStmt: VAR VarID VarType '=' Expression .

    $default  reduce using rule 80 (DeclarationStmt)


State 181

   81 DeclarationStmt: VAR VarID VarType '=' FunctionCall .

    $default  reduce using rule 81 (DeclarationStmt)


State 182

   94 ElseStmt: ELSE Block .

    $default  reduce using rule 94 (ElseStmt)


State 183

   93 ElseStmt: ELSE IfStmt .

    $default  reduce using rule 93 (ElseStmt)


State 184

   98 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 18
    FLOAT      shift, and go to state 19
    BOOL       shift, and go to state 20
    STRING     shift, and go to state 21
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    ID         shift, and go to state 79
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36
    '!'        shift, and go to state 37
    '('        shift, and go to state 38
    '"'        shift, and go to state 39

    Type                   go to state 41
    Expression             go to state 42
    Assignment_expression  go to state 43
    Lor_expression         go to state 44
    Land_expression        go to state 45
    Cmp_expression         go to state 46
    Add_expression         go to state 47
    Mul_expression         go to state 48
    Cast_expression        go to state 49
    UnaryExpr              go to state 50
    unary_op               go to state 51
    PrimaryExpr            go to state 52
    Operand                go to state 53
    Literal                go to state 54
    ConversionExpr         go to state 55
    SimpleStmt             go to state 187
    IncDecStmt             go to state 61
    PostStmt               go to state 188


State 185

   76 Parameters_call: Parameters_call ',' Operand .

    $default  reduce using rule 76 (Parameters_call)


State 186

  114 ParameterList: ParameterList ',' ParID Type .

    $default  reduce using rule 114 (ParameterList)


State 187

  100 PostStmt: SimpleStmt .

    $default  reduce using rule 100 (PostStmt)


State 188

   98 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 98 (ForClause)
